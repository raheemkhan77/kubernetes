### steps to install kubernetes on linux machine.

###requirements
RAM 2G, CPU 2G, Ubuntu 16.04+ centos 7

step1 ==>
### install docker on each macine 
# (Install Docker CE)
## Set up the repository:
### Install packages to allow apt to use a repository over HTTPS
apt-get update && apt-get install -y \
  apt-transport-https ca-certificates curl software-properties-common gnupg2
  
  # Add Dockerâ€™s official GPG key:
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -

# Add the Docker apt repository:
add-apt-repository \
  "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) \
  stable"
  
  # Install Docker CE
apt-get update && apt-get install -y \
  containerd.io=1.2.13-2 \
  docker-ce=5:19.03.11~3-0~ubuntu-$(lsb_release -cs) \
  docker-ce-cli=5:19.03.11~3-0~ubuntu-$(lsb_release -cs)
  
  # Set up the Docker daemon
cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF


mkdir -p /etc/systemd/system/docker.service.d

# Restart Docker
systemctl daemon-reload
systemctl restart docker

###If you want the docker service to start on boot, run the following command:
sudo systemctl enable docker

### Docker is installed and it should be repeated on all machine. We will now be install kubeadm, kubelet and kubectl as below 

sudo apt-get update && sudo apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
=====
### Now login to master as root user and run below command 
 kubeadm init 
 it will give below o/p , copy it and run on only master node (the 3 commands)
---------------------------------

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.57.144:6443 --token dojqgx.cw4hd4u3a4d75i4u \
    --discovery-token-ca-cert-hash sha256:9fb7fb40c896243e60835ba3f3226d0e1901d8f2acde44de515af3e115c9c20d
-------------------------------------------------------------------------------------------------------
### to enable pod networking run the below command. pod network is enabled only after installing pod network.
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

### go to node and run the join kubeadm command on node .
kubeadm join 172.31.57.144:6443 --token dojqgx.cw4hd4u3a4d75i4u \
    --discovery-token-ca-cert-hash sha256:9fb7fb40c896243e60835ba3f3226d0e1901d8f2acde44de515af3e115c9c20d
    



